git checkout -b name： 创建并切换分支到name分支

git push origin name : 将name分支上传到服务器。
：：若name不存在，就在远端创建分支

git push origin --delete <branchName> ：删除远端分支<branchName>

git push origin :<branchName> ：删除远端分支<branchName>
：:完整的意义是把空的东西上传到远端origin的<branchName>分支上。

git push origin local:remote : 把local分支上传到远端的remote分支
：：如果忽略 :remote 表示远端使用local相同的名字接受上传

ssh-keygen -t rsa -C "mail@address.com" :the 创建密钥
：：－t选择密钥类型，默认RSA密钥 ：：－C提供一个新注释

git config --global user.name "John Doe"
git config --global user.email johndoe@example.com

git config --list ：显示配置信息

http://www.oschina.net/translate/10-tips-git-next-level

git stash : 存储当前工作区到一个stash中
：：等价于git stash save "WIP on branchname …​"

git stash list : 显示所有的stash

git stash apply stash@{2} : 应用第二个stash

git cherry-pick [commit_hash] : 将某次提交再次提交到当前分支

git commit --amend : 覆盖上次的提交

git remote set-url origin git@github.com:QiaoBuTang/www.git：将origin关联远端git@github.com:QiaoBuTang/www.git

git remote add origin https://github.com/Unlimited-Works/database.git : 添加一个远端
git branch :列出本地已经存在的分支，并且在当前分支的前面加“*”号标记
git branch -r :列出远程分支
git branch -a :列出本地分支和远程分支

git branch -d | -D branchname :删除branchname分支
::-d需要分支已经完全合并， -D强制删除

git branch -d -r branchname :删除远程branchname分支

git stash pop stash@{1} :恢复的编号为1的工作现场，并删除相应现场
git stash apply stash@{1} :同上，但不删除工作现场

git stash save "msg" :保存工作现场，并标记为msg消息
：：git stash 是省略了msg的save命令

git stash drop :删除顶端的一条记录
：：与save操作对应
：：后面接stash@{2}: 表示删除标记为｛2｝的记录

git reset a.txt : 将a.txt文件移除暂存区

github 仓库 按t会进入搜索指定文件的环境

git commit --amend: 覆盖上次的提交

git fetch origin master : 获取origin上的master到本地对应的分支
：：默认fetch到同名分支

git merge origin/master : 合并origin/master到当前分支
